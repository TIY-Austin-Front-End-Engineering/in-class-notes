{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","main.js"],"names":[],"mappings":"AAAA;ACAA,YAAY,CAAC","file":"all.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n/****************************************/\n/*                                      */\n/*             let vs. var              */\n/*                                      */\n/****************************************/\n\n// if(true) {\n// \tvar myVar2 = 'test';\n// \tconsole.log('myVar2 in if', myVar2);\n// }\n\n// console.log('myVar2 outside if', myVar2);\n\n// // // vs\n\n// if(true) {\n// \tlet myVar1 = 'test';\n// \tconsole.log('myVar1 in if', myVar1);\n// }\n\n// console.log('myVar1 outside if', myVar1);\n\n/****************************************/\n/*                                      */\n/*         let hoisting example         */\n/*              goes here               */\n/****************************************/\n// var test = 'hello';\n\n// function run() {\n// \tif(test) {\n// \t\tlet test = 'goodbye';\n// \t\tconsole.log(test);\n// \t}\n\n// \tconsole.log(test);\n// }\n\n// run();\n\n/****************************************/\n/*                                      */\n/*               constants              */\n/*                                      */\n/****************************************/\n\n// const PI = 3.141593;\n\n// var PI = 7;\n\n// console.log(PI);\n\n/****************************************/\n/*                                      */\n/*                arrows                */\n/*                                      */\n/****************************************/\n\n// var test = (a, b) => {\n// \tif(a > b) {\n// \t\treturn a;\n// \t}\n// \telse {\n// \t\treturn b;\n// \t}\n// }\n\n\n// var $ = require('jquery');\n\n// var toEatList = {\n// \tfood: [],\n// \tadd: function(f) {\n// \t\tconsole.log(this);\n// \t\t$.post(\n// \t\t\t'http://tiny-pizza-server.herokuapp.com/collections/toeat',\n// \t\t\t{food: f},\n// \t\t\t(result) => {\n// \t\t\t\tconsole.log(this);\n// \t\t\t\tthis.food.push(result);\n// \t\t\t\tconsole.log(this.food);\n\n// \t\t\t\t// (\n// \t\t\t\t// \t() => {\n// \t\t\t\t// \t\tconsole.log('test');\n// \t\t\t\t// \t\tconsole.log(this)\n// \t\t\t\t// \t}\n// \t\t\t\t// )();\n\n// \t\t\t\t((a, b) => {\n// \t\t\t\t\tconsole.log('test', a);\n// \t\t\t\t\tconsole.log(this)\n// \t\t\t\t})('blah');\n// \t\t\t}\n// \t\t);\n// \t}\n// }\n\n// toEatList.add('pasta');\n\n/****************************************/\n/*                                      */\n/*               imports                */\n/*                                      */\n/****************************************/\n\n// import obj from './number';\n// // var obj = require('./number');\n\n// console.log(obj);\n\n// import { test, hello } from './fancy-import';\n\n// import test2 from './fancy-import';\n\n// console.log(test);\n// console.log(hello);\n// console.log(test2);\n\n// import * as fancy from './fancy-import';\n\n// console.log(fancy);\n\n/****************************************/\n/*                                      */\n/*            destructuring             */\n/*                                      */\n/****************************************/\n\n// var path = 'Users/alarner/Projects/test/foo/bar';\n\n// var [a, b, c, ... d] = path.split('/');\n\n// console.log(a);\n// console.log(b);\n// console.log(c);\n// console.log(d);\n\n// var id = 'post-23';\n\n// var pieces = id.split('-');\n// var type = pieces[0];\n// var id = pieces[1];\n\n// var [type, id] = pieces.split('-');\n\n\n/****************************************/\n/*                                      */\n/*             teamplating              */\n/*                                      */\n/****************************************/\n\n// var person = {\n// \tfirstName: 'Bob',\n// \tlastName: 'Smith'\n// }\n\n// // var string = 'Hello '+person.firstName+' '+person.lastName+'. Weclome to ES2015!';\n\n// var string = `Hello ${person.firstName} ${person.lastName}.\n// Welcome to ES2015!`;\n\n// console.log(string);\n\n/****************************************/\n/*                                      */\n/*               classes                */\n/*                                      */\n/****************************************/\n\n// class Animal {\n// \tconstructor() {\n// \t\t// console.log('start constructor');\n// \t\tthis.name = '';\n// \t\tthis.type = '';\n// \t\tthis.color = '';\n// \t\tthis.numLegs = 4;\n// \t\tthis.sound = '::silence::';\n// \t\t// console.log('end constructor');\n// \t}\n\n// \tspeak() {\n// \t\tconsole.log(this.sound);\n// \t}\n// }\n\n// // console.log('before instantiate Animal');\n// // var cat = new Animal();\n// // console.log(cat);\n\n// class Cat extends Animal {\n// \tconstructor() {\n// \t\tsuper();\n// \t\tthis.type = 'cat';\n// \t\tthis.sound = 'meow';\n// \t}\n// }\n\n// class Spider extends Animal {\n// \tconstructor() {\n// \t\tsuper();\n// \t\tthis.numLegs = 8;\n// \t\tthis.eyes = 12;\n// \t\tthis.type = 'spider';\n// \t}\n// }\n\n// var sammy = new Cat();\n// var charlotte = new Spider();\n// charlotte.name = 'charlotte';\n\n// console.log(sammy, charlotte);\n\n// sammy.speak();\n// charlotte.speak();\n\n\n/****************************************/\n/*                                      */\n/*              promises                */\n/*                                      */\n/****************************************/\n// function timeout(duration = 0) {\n//     return new Promise((resolve, reject) => {\n//         setTimeout(resolve, duration);\n//     })\n// }\n\n// var p = timeout(1000).then(() => {\n//     return timeout(2000);\n// }).then(() => {\n//     throw new Error(\"hmm\");\n// }).catch(err => {\n//     return Promise.all([timeout(100), timeout(200)]);\n// })\n"]}